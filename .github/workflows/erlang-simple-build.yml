name: Erlang Simple Build

on:
  workflow_call:
    inputs:
      # Beam env
      otp-version:
        description: 'Erlang/OTP version to use.'
        required: true
        type: string
      rebar-version:
        description: 'Rebar version to use.'
        required: true
        type: string
      # Thrift options
      use-thrift:
        description: 'Whether or not to install the thrift compiler.'
        required: false
        default: false
        type: boolean
      thrift-version:
        description: 'Thrift (valitydev/thrift) version to use.'
        required: false
        default: "0.14.2.3"
        type: string
      # Codegen options
      use-swagger-codegen:
        description: 'Whether or not to install the swagger code generator.'
        required: false
        default: false
        type: boolean
      swagger-codegen-version:
        description: 'Codegen (swagger-api/swagger-codegen) version to use.'
        required: false
        default: "2.4.25"
        type: string
      erlang-generator-version:
        description: 'Erlang generator (valitydev/swagger-generator-erlang) version to use.'
        required: false
        default: "1.0.1"
        type: string
      # Test env
      run-eunit:
        description: 'Should we bother running unit tests? The answer is probably no for thrift repos.'
        required: false
        default: true
        type: boolean
      run-common-test:
        description: 'Should we bother running common test? The answer is probably no for thrift repos.'
        required: false
        default: true
        type: boolean
      # Workflow env
      cache-version:
        description: 'Cache version. Only change this if you *need* to reset build caches.'
        required: false
        default: "v1"
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup BEAM
        uses: erlef/setup-beam@v1.10
        with:
          otp-version: ${{ inputs.otp-version }}
          rebar3-version: ${{ inputs.rebar-version }}

      - name: Setup Thrift compiler
        if: ${{ inputs.use-thrift }}
        uses: valitydev/action-setup-thrift@v0.0.5
        with:
          thrift-version: ${{ inputs.thrift-version }}

      - name: Setup Swagger Codegen
        if: ${{ inputs.use-swagger-codegen }}
        uses: valitydev/action-setup-swagger-codegen@v0.0.1
        with:
          codegen-version: ${{ inputs.swagger-codegen-version }}
          generator-version: ${{ inputs.erlang-generator-version }}

      - name: Cache _build
        uses: actions/cache@v3
        with:
          path: _build/default/lib
          key: ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ inputs.otp-version }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ inputs.otp-version }}-build-

      - name: Cache PLTs
        uses: actions/cache@v3
        with:
          path: _build/test/rebar3_*_plt
          key: ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ inputs.otp-version }}-plt-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ inputs.otp-version }}-plt-

      - name: Check formatting (prereqs)
        id: prereq-erlfmt
        run: |
          if ( rebar3 plugins list | grep 'erlfmt' ) ; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
            echo "::notice file=rebar.config::Plugin 'erlfmt' is missing, can not check formatting."
          fi

      - name: Check formatting
        if: ${{ steps.prereq-erlfmt.outputs.exists == 'true' }}
        run: rebar3 fmt -c

      - name: Run linting (prereqs)
        id: prereq-lint
        run: |
          if ( rebar3 plugins list | grep 'rebar3_lint' ) ; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
            echo "::notice file=rebar.config::Plugin 'rebar3_lint' is missing, can not run linting."
          fi

      - name: Run linting
        if: ${{ steps.prereq-lint.outputs.exists == 'true' }}
        run: rebar3 lint

      - name: Run xref
        run: rebar3 xref

      - name: Run dialyzer
        run: rebar3 as test dialyzer

      - name: Run EUnit
        if: ${{ inputs.run-eunit == true }}
        run: rebar3 eunit --cover

      - name: Run CommonTest
        if: ${{ inputs.run-common-test == true }}
        id: run-ct
        run: rebar3 ct --cover

      - name: Store CT Logs
        if: ${{ failure() && steps.run-ct.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: ct-logs
          path: _build/test/logs

      - name: Run test coverage analysis
        if: ${{ inputs.run-eunit == true || inputs.run-common-test == true }}
        run: rebar3 covertool generate

      - name: Upload coverage statistics
        if: ${{ inputs.run-eunit == true || inputs.run-common-test == true }}
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: _build/test/covertool/*.covertool.xml
